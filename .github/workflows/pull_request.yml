---
name: Pull Request

on:
  pull_request:

env:
  ENVIRONMENT: dev
  IMAGE_NAME: con-pca-api
  REGION: us-east-1
  PIP_CACHE_DIR: ~/.cache/pip
  PRE_COMMIT_CACHE_DIR: ~/.cache/pre-commit
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_BUCKET: con-pca-terraform
  TF_DYNAMO_TABLE: con-pca-tf-lock

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Store installed Python version
        run: |
          echo "::set-env name=PY_VERSION::"\
          "$(python -c "import platform;print(platform.python_version())")"
      - name: Cache pip test requirements
        uses: actions/cache@v1
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: "${{ runner.os }}-pip-test-py${{ env.PY_VERSION }}-\
            ${{ hashFiles('**/requirements-test.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-test-py${{ env.PY_VERSION }}-
            ${{ runner.os }}-pip-test-
            ${{ runner.os }}-pip-
      - name: Cache pre-commit hooks
        uses: actions/cache@v1
        with:
          path: ${{ env.PRE_COMMIT_CACHE_DIR }}
          key: "${{ runner.os }}-pre-commit-py${{ env.PY_VERSION }}-\
            ${{ hashFiles('**/.pre-commit-config.yaml') }}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --requirement requirements-test.txt
      - name: Set up pre-commit hook environments
        run: pre-commit install-hooks
      - name: pre-commit autoupdate
        run: pre-commit autoupdate
      - name: Run pre-commit on all files
        run: pre-commit run --all-files

  python_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Cache pip test requirements
        uses: actions/cache@v2
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: "${{ runner.os }}-pip-test-\
            ${{ hashFiles('**/requirements-test.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-test-
            ${{ runner.os }}-pip-
      - name: Upgrade Pip
        run: python -m pip install --upgrade pip
      - name: Install Requirements
        run: pip install --upgrade --requirement requirements-test.txt
      - name: Copy env
        run: cp etc/env.dist .env
      - name: Pytest/Coverage
        run: |
          coverage run --omit *.venv*,*test* -m pytest ./tests/ --disable-warnings
          coverage report
